import java.util.*;
public class TollBoothLine {
	
	protected static final int MAX_LINE_LENGTH = 25;
	private String lineType=""; //M or A
	private int nextVehicleTime = 0;
	private int numOfVehicles = 0;
	private int maxLengthReached = 0;
	List<Vehicle> vehicleList = new ArrayList<Vehicle>(MAX_LINE_LENGTH); //allows object to contain vehicles of any type

	//Constructor
	public TollBoothLine(String type){ 
		this.setLineType(type); 

	}
	//^^error handling not needed. type is not user generated.

	//list methods
	public boolean isFull() {
		if (numOfVehicles >= MAX_LINE_LENGTH) return true;
		else return false;
	}

	//get methods
	public int getLineLength(){ return numOfVehicles; }
	public String getLineType() { return lineType; }
	public List<Vehicle> getQueue(){ return vehicleList; }
	public Vehicle getQueue(int index){ 
		try { return vehicleList.get(index); } 
		catch (IndexOutOfBoundsException e) { return vehicleList.get(0); } //this method is only used to return the first vehicle in the line, but can be used to return any of them.
	}
	public int getMaxLengthReached() { return maxLengthReached; }
	//set methods
	public void setLineType(String type) { lineType = type; }//type is generated by program, not user
	
	//add/remove vehicles methods
	public void addVehicle(Vehicle vehicle){ //error of setting a vehicle to a manual or automatic line will be handled by simulator
		vehicleList.add(vehicle); 
		numOfVehicles = this.getLineLength(); //reassigns the vehicle counting var per line after vehicle is added/removed.
		maxLengthReached = (this.maxLengthReached<numOfVehicles) ?  numOfVehicles : maxLengthReached; //reassignx max size reached if necessary
	}
	/*	add vehicle to line method (call getLineLength(); 
		inside method & reassigh the max linne length reached 
		if currentlength is greater)
	*/
	public Vehicle next(int time){ //removes vehicle from line and returns it to add to DoneVehicles list
		Vehicle temp = vehicleList.get(0);
		vehicleList.get(0).setTimeOut(time);
		vehicleList.remove(0);
		System.out.println("moved vehicle");
		return temp;
	}
}